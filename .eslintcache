[{"/mnt/c/Users/18326/Desktop/project202/src/index.js":"1","/mnt/c/Users/18326/Desktop/project202/src/reportWebVitals.js":"2","/mnt/c/Users/18326/Desktop/project202/src/App.js":"3","/mnt/c/Users/18326/Desktop/project202/src/TranslateSpeech.js":"4","/mnt/c/Users/18326/Desktop/project202/src/TranslateText.js":"5","/mnt/c/Users/18326/Desktop/project202/src/Nav.js":"6","/mnt/c/Users/18326/Desktop/project202/src/components/DeleteStudent.js":"7","/mnt/c/Users/18326/Desktop/project202/src/utils/googleTranslate.js":"8","/mnt/c/Users/18326/Desktop/project202/src/components/AuthStatus.js":"9","/mnt/c/Users/18326/Desktop/project202/src/ConvertImage.js":"10","/mnt/c/Users/18326/Desktop/project202/src/components/UpdateNotes.js":"11","/mnt/c/Users/18326/Desktop/project202/src/components/GetAllNotes.js":"12","/mnt/c/Users/18326/Desktop/project202/src/components/PostNotes.js":"13","/mnt/c/Users/18326/Desktop/project202/src/utils/env.js":"14","/mnt/c/Users/18326/Desktop/project202/src/components/Authentication-button.js":"15","/mnt/c/Users/18326/Desktop/project202/src/TranslateImage.js":"16","/mnt/c/Users/18326/Desktop/project202/src/components/LogoutButton.js":"17","/mnt/c/Users/18326/Desktop/project202/src/components/LoginButton.js":"18","/mnt/c/Users/18326/Desktop/project202/src/components/Notes.js":"19","/mnt/c/Users/18326/Desktop/project202/src/components/NoteItem.js":"20"},{"size":785,"mtime":1607702018405,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607553923784,"results":"23","hashOfConfig":"22"},{"size":8196,"mtime":1608070203511,"results":"24","hashOfConfig":"22"},{"size":1996,"mtime":1607702018373,"results":"25","hashOfConfig":"22"},{"size":2046,"mtime":1608050636362,"results":"26","hashOfConfig":"22"},{"size":4856,"mtime":1608052933506,"results":"27","hashOfConfig":"22"},{"size":1155,"mtime":1607987639782,"results":"28","hashOfConfig":"22"},{"size":108,"mtime":1607702018418,"results":"29","hashOfConfig":"22"},{"size":200,"mtime":1607970708813,"results":"30","hashOfConfig":"22"},{"size":3513,"mtime":1607970708811,"results":"31","hashOfConfig":"22"},{"size":1356,"mtime":1607987639786,"results":"32","hashOfConfig":"22"},{"size":1315,"mtime":1608070203516,"results":"33","hashOfConfig":"22"},{"size":2415,"mtime":1608070203517,"results":"34","hashOfConfig":"22"},{"size":66,"mtime":1607980693150,"results":"35","hashOfConfig":"22"},{"size":357,"mtime":1607970708813,"results":"36","hashOfConfig":"22"},{"size":664,"mtime":1607970708812,"results":"37","hashOfConfig":"22"},{"size":386,"mtime":1607987639784,"results":"38","hashOfConfig":"22"},{"size":311,"mtime":1607987629589,"results":"39","hashOfConfig":"22"},{"size":450,"mtime":1608051852350,"results":"40","hashOfConfig":"22"},{"size":1886,"mtime":1608051852349,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1t7lsob",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/18326/Desktop/project202/src/index.js",[],["89","90"],"/mnt/c/Users/18326/Desktop/project202/src/reportWebVitals.js",[],"/mnt/c/Users/18326/Desktop/project202/src/App.js",["91"],"import React, { useEffect, useState } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./App.css\";\r\nimport TranslateSpeech from \"./TranslateSpeech.js\";\r\nimport cookie from \"react-cookies\";\r\nimport ConvertImage from \"./ConvertImage\";\r\nimport TranslateText from \"./TranslateText\";\r\n// import NoteForm from \"./components/Notes\";\r\nimport AuthStatus from \"./components/AuthStatus\";\r\nimport GetAllNotes from \"./components/GetAllNotes\";\r\nimport PostNotes from \"./components/PostNotes\";\r\nimport DeleteStudent from \"./components/DeleteStudent\";\r\nimport UpdateNotes from \"./components/UpdateNotes\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\nrecognition.interimResults = false;\r\n\r\nfunction App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  const [transcript, handleTranscript] = useState([]);\r\n  const [nativeTranscript, handleNativeTranscript] = useState([]);\r\n  const [languageCodes, handleLanguageCodes] = useState([]);\r\n  const [language, handleLanguage] = useState(\r\n    cookie.load(\"language\") ? cookie.load(\"language\") : \"en\"\r\n  );\r\n  const [inputLanguage, handleInputLanguage] = useState(\r\n    cookie.load(\"inputLanguage\") ? cookie.load(\"inputLanguage\") : \"en\"\r\n  );\r\n  const [inputSelected, handleInputSelected] = useState(false);\r\n  const [question, handleQuestion] = useState(\"\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(false);\r\n  const [translateText, handleTranslateText] = useState(false);\r\n  const [convertImage, handleConvertImage] = useState(false);\r\n  const [home, handleHome] = useState(true);\r\n  const [logIn, handleLogIn] = useState(false);\r\n  const [notes, handleNotes] = useState(false);\r\n  const [firstLanguagePrompt, handleFirstLanguagePrompt] = useState(\r\n    \"What's your language?\"\r\n  );\r\n  const [secondLanguagePrompt, handleSecondLanguagePrompt] = useState(\r\n    \"Instructor's language\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    googleTranslate.getSupportedLanguages(\"en\", (err, languageCodes) => {\r\n      console.log(languageCodes);\r\n      getLanguageCodes(languageCodes);\r\n    });\r\n\r\n    const getLanguageCodes = (languageCodes) => {\r\n      handleLanguageCodes(languageCodes);\r\n    };\r\n  }, []);\r\n\r\n  recognition.onstart = () => {\r\n    console.log(\"voice activated\");\r\n  };\r\n  recognition.onresult = (e) => {\r\n    const current = e.resultIndex;\r\n\r\n    const newTranscript = e.results[current][0].transcript;\r\n    if (!inputSelected) {\r\n      handleTranscript([...transcript, newTranscript]);\r\n    } else handleNativeTranscript([...nativeTranscript, newTranscript]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"What's your language?\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleFirstLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Instructor language\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleSecondLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const changeHandler = (language) => {\r\n    let aquestion = question;\r\n    let cookieLanguage = cookie.load(\"language\");\r\n    let transQuestion = \"\";\r\n\r\n    const translating = (transQuestion) => {\r\n      if (aquestion !== transQuestion) {\r\n        handleQuestion(transQuestion);\r\n        cookie.save(\"question\", transQuestion, { path: \"/\" });\r\n      }\r\n    };\r\n\r\n    if (language !== cookieLanguage) {\r\n      googleTranslate.translate(question, language, (err, translation) => {\r\n        transQuestion = translation.translatedText;\r\n        translating(transQuestion);\r\n      });\r\n    }\r\n\r\n    handleLanguage(language);\r\n    cookie.save(\"language\", language, { path: \"/\" });\r\n  };\r\n\r\n  const changeInputHandler = (language) => {\r\n    handleInputLanguage(language);\r\n    cookie.save(\"inputLanguage\", language, { path: \"/\" });\r\n  };\r\n\r\n  const clearStatus = () => {\r\n    handleHome(false);\r\n    handleTranslateSpeech(false);\r\n    handleTranslateText(false);\r\n    handleConvertImage(false);\r\n    handleLogIn(false);\r\n    handleNotes(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav\r\n        language={language}\r\n        chooseHome={() => {\r\n          clearStatus();\r\n          handleHome(true);\r\n        }}\r\n        chooseTranslateSpeech={() => {\r\n          clearStatus();\r\n\r\n          handleTranslateSpeech(true);\r\n        }}\r\n        chooseTranslateText={() => {\r\n          clearStatus();\r\n          handleTranslateText(true);\r\n        }}\r\n        chooseConvertImage={() => {\r\n          clearStatus();\r\n          handleConvertImage(true);\r\n        }}\r\n        chooseLogin={() => {\r\n          clearStatus();\r\n          handleLogIn(true);\r\n        }}\r\n        chooseNotes={() => {\r\n          clearStatus();\r\n          handleNotes(true);\r\n        }}\r\n      />\r\n      <div className=\"app__question\">\r\n        <br />\r\n        <p>{firstLanguagePrompt}</p>\r\n        <select\r\n          className=\"select__language\"\r\n          value={language}\r\n          onChange={(e) => changeHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"app__question\">\r\n        {secondLanguagePrompt}\r\n        <select\r\n          className=\"select-language\"\r\n          value={inputLanguage}\r\n          onChange={(e) => changeInputHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {logIn ? <AuthStatus /> : \"\"}\r\n      {isAuthenticated ? (\r\n        <div>\r\n          {translateSpeech ? (\r\n            <div>\r\n              <button\r\n                className={`talk`}\r\n                onClick={() => {\r\n                  handleInputSelected(false);\r\n                  recognition.start();\r\n                }}\r\n              >\r\n                Talk\r\n              </button>\r\n              <button\r\n                className={\"talk\"}\r\n                onClick={() => {\r\n                  recognition.stop();\r\n                }}\r\n              >\r\n                Stop\r\n              </button>\r\n              {transcript.map((text) => (\r\n                <p>{text}</p>\r\n              ))}\r\n              <div>\r\n                <div className=\"translated-speech\">\r\n                  <div className=\"speech-list\">\r\n                    {transcript.map((text) => (\r\n                      <TranslateSpeech message={text} language={language} />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"speech-list\">\r\n                    {nativeTranscript.map((text) => (\r\n                      <TranslateSpeech\r\n                        message={text}\r\n                        language={inputLanguage}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {convertImage ? <ConvertImage language={language} /> : \"\"}\r\n          {translateText ? <TranslateText language={language} /> : \"\"}\r\n          {notes ? (\r\n            <div>\r\n              {/* <NoteForm /> */}\r\n              <GetAllNotes language={language} />\r\n              <PostNotes language={language} />\r\n              <DeleteStudent language={language} />\r\n              <UpdateNotes language={language} />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/mnt/c/Users/18326/Desktop/project202/src/TranslateSpeech.js",[],"/mnt/c/Users/18326/Desktop/project202/src/TranslateText.js",["92"],"import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\n// import { debounce }  from 'lodash';\r\nimport \"./TranslateText.css\";\r\n\r\nfunction TranslateText({ language }) {\r\n  const [greeting, handleGreeting] = useState(\"\");\r\n  const [textMessage, handleTextMessage] = useState(\"\");\r\n  const [placeHolderText, handlePlaceHolderText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let transGreeting;\r\n\r\n    googleTranslate.translate(\r\n      \"Please type out a message to have it translated\",\r\n      language,\r\n      function (err, translation) {\r\n        transGreeting = translation.translatedText;\r\n        translating(transGreeting);\r\n      }\r\n    );\r\n\r\n    const translating = (transGreeting) => {\r\n      handleGreeting(transGreeting);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transPlaceHolderText;\r\n\r\n    googleTranslate.translate(\r\n      \"Type your message here to translate...\",\r\n      language,\r\n      function (err, translation) {\r\n        transPlaceHolderText = translation.translatedText;\r\n        translating(transPlaceHolderText);\r\n      }\r\n    );\r\n\r\n    const translating = (transPlaceHolderText) => {\r\n      handlePlaceHolderText(transPlaceHolderText);\r\n    };\r\n  }, [language]);\r\n\r\n  const translateText = (typedMessage) => {\r\n    let transMessage = \"\";\r\n\r\n    googleTranslate.translate(typedMessage, \"en\", function (err, translation) {\r\n      transMessage = translation.translatedText;\r\n      translating(transMessage);\r\n    });\r\n\r\n    const translating = (transMessage) => {\r\n      handleTextMessage(transMessage);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {greeting}\r\n            <br /><br /> */}\r\n      <div className=\"messages\">\r\n        <div className=\"message\">\r\n          <textarea\r\n            placeHolder={placeHolderText}\r\n            onChange={(e) => translateText(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"message\">{textMessage}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslateText;\r\n","/mnt/c/Users/18326/Desktop/project202/src/Nav.js",["93"],"import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav({\r\n  language,\r\n  chooseHome,\r\n  isLoggedIn,\r\n  chooseLogin,\r\n  chooseTranslateSpeech,\r\n  chooseTranslateText,\r\n  chooseConvertImage,\r\n  chooseNotes,\r\n}) {\r\n  const [home, handleHome] = useState(\"Home\");\r\n  const [login, handleLogIn] = useState(isLoggedIn ? \"Log Out\" : \"Log In\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(\"Translate Speech\");\r\n  const [translateText, handleTranslateText] = useState(\"Translate Text\");\r\n  const [convertImage, handleConvertImage] = useState(\"Convert Image\");\r\n  const [notes, handleNotes] = useState(\"Notes\");\r\n  const [logInClicked, handleLogInClicked] = useState(false);\r\n  const [speechClicked, handleSpeechClicked] = useState(false);\r\n  const [textClicked, handleTextClicked] = useState(false);\r\n  const [convertImageClicked, handleConvertImageClicked] = useState(false);\r\n  const [notesClicked, handleNotesClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Home\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleHome(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Notes\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleNotes(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(login, language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleLogIn(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Speech\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateSpeech(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Text\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateText(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Image\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleConvertImage(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const clearHandles = () => {\r\n    handleLogInClicked(false);\r\n    handleSpeechClicked(false);\r\n    handleTextClicked(false);\r\n    handleConvertImageClicked(false);\r\n    handleNotesClicked(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__list\">\r\n        <li\r\n          className=\"nav__list\"\r\n          onClick={() => {\r\n            chooseHome();\r\n            clearHandles();\r\n          }}\r\n        >\r\n          {home}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${logInClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseLogin();\r\n            clearHandles();\r\n            handleLogInClicked(true);\r\n          }}\r\n        >\r\n          {login}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${speechClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateSpeech();\r\n            clearHandles();\r\n            handleSpeechClicked(true);\r\n          }}\r\n        >\r\n          {translateSpeech}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${textClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateText();\r\n            clearHandles();\r\n            handleTextClicked(true);\r\n          }}\r\n        >\r\n          {translateText}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${convertImageClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseConvertImage();\r\n            clearHandles();\r\n            handleConvertImageClicked(true);\r\n          }}\r\n        >\r\n          {convertImage}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${notesClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseNotes();\r\n            clearHandles();\r\n            handleNotesClicked(true);\r\n          }}\r\n        >\r\n          {notes}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","/mnt/c/Users/18326/Desktop/project202/src/components/DeleteStudent.js",["94","95"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class DeleteStudent extends React.Component{\r\n    state = {\r\n        student: \"\"\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n        \r\n    }\r\n\r\n    handleDeleteOnSubmit = (event) => {\r\n        // Handles the get notes event\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            student: this.state.student,\r\n            \r\n        }\r\n        axios.delete(`http://localhost:9000/notes/${this.state.student}`)\r\n        .then(res => {\r\n            const studentNotes = res.data;\r\n         //  this.setState({ notes });\r\n            \r\n        }).catch(error => console.log(error))\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleDeleteOnSubmit}>\r\n                    <input type=\"text\" id=\"student\" placeholder=\"Your name\" name=\"student\" onChange={this.handleChange} />\r\n                    \r\n                    <button type=\"submit\">Delete Student Notes</button>\r\n                    </form>\r\n            </div>\r\n        )}\r\n}","/mnt/c/Users/18326/Desktop/project202/src/utils/googleTranslate.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/AuthStatus.js",[],"/mnt/c/Users/18326/Desktop/project202/src/ConvertImage.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/UpdateNotes.js",["96"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class UpdateNotes extends React.Component{\r\n    state = {\r\n        student: \"\",\r\n        notes: []\r\n    \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n        \r\n    }\r\n\r\n    handleUpdateOnSubmit = (event) => {\r\n        // Handles the get notes event\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            student: this.state.student,\r\n            notes: this.state.notes\r\n        }\r\n        axios.put(`http://localhost:9000/notes/${this.state.student}`, {\r\n            notes: this.state.notes\r\n        })\r\n        .then(res => {\r\n            const studentNotes = res.data;\r\n         //  this.setState({ notes });\r\n            console.log(studentNotes)\r\n        }).catch(error => console.log(error))\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <form onSubmit={this.handleUpdateOnSubmit}>\r\n                    <input type=\"text\" id=\"student\" placeholder=\"Student name\" name=\"student\" onChange={this.handleChange} />\r\n                    <input type=\"text\" id=\"notes\" placeholder=\"Update notes\" name=\"notes\" onChange={this.handleChange} />\r\n                    <button type=\"submit\">Update</button>\r\n                    </form>\r\n            </div>\r\n        )}\r\n}","/mnt/c/Users/18326/Desktop/project202/src/components/GetAllNotes.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/PostNotes.js",[],"/mnt/c/Users/18326/Desktop/project202/src/utils/env.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/Authentication-button.js",[],"/mnt/c/Users/18326/Desktop/project202/src/TranslateImage.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/LogoutButton.js",[],["97","98"],"/mnt/c/Users/18326/Desktop/project202/src/components/LoginButton.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/Notes.js",[],"/mnt/c/Users/18326/Desktop/project202/src/components/NoteItem.js",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":39,"column":10,"nodeType":"107","messageId":"108","endLine":39,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":61,"column":6,"nodeType":"112","endLine":61,"endColumn":16,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"114","line":19,"column":15,"nodeType":"107","messageId":"108","endLine":19,"endColumn":19},{"ruleId":"105","severity":1,"message":"115","line":25,"column":19,"nodeType":"107","messageId":"108","endLine":25,"endColumn":31},{"ruleId":"105","severity":1,"message":"114","line":20,"column":15,"nodeType":"107","messageId":"108","endLine":20,"endColumn":19},{"ruleId":"101","replacedBy":"116"},{"ruleId":"103","replacedBy":"117"},{"ruleId":"105","severity":1,"message":"118","line":12,"column":17,"nodeType":"107","messageId":"108","endLine":12,"endColumn":22},{"ruleId":"105","severity":1,"message":"119","line":63,"column":7,"nodeType":"107","messageId":"108","endLine":63,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'home' is assigned a value but never used.","Identifier","unusedVar","'greeting' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'user' is assigned a value but never used.","'studentNotes' is assigned a value but never used.",["120"],["121"],"'title' is assigned a value but never used.","'noteStyle2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [language, login]",{"range":"125","text":"126"},[1975,1985],"[language, login]"]