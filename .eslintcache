[{"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\index.js":"1","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\reportWebVitals.js":"2","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\App.js":"3","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateSpeech.js":"4","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\ConvertImage.js":"5","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateText.js":"6","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\Nav.js":"7","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\utils\\googleTranslate.js":"8","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\UpdateNotes.js":"9","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\PostNotes.js":"10","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\GetAllNotes.js":"11","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\AuthStatus.js":"12","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\DeleteStudent.js":"13","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateImage.js":"14","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\utils\\env.js":"15","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\Authentication-button.js":"16","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\LoginButton.js":"17","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\LogoutButton.js":"18"},{"size":815,"mtime":1607720109032,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1607555117529,"results":"21","hashOfConfig":"20"},{"size":8196,"mtime":1608075197494,"results":"22","hashOfConfig":"20"},{"size":2078,"mtime":1607700369144,"results":"23","hashOfConfig":"20"},{"size":3513,"mtime":1607710968735,"results":"24","hashOfConfig":"20"},{"size":2046,"mtime":1608063987432,"results":"25","hashOfConfig":"20"},{"size":4856,"mtime":1608063987432,"results":"26","hashOfConfig":"20"},{"size":112,"mtime":1608080747844,"results":"27","hashOfConfig":"20"},{"size":1424,"mtime":1608075197497,"results":"28","hashOfConfig":"20"},{"size":2576,"mtime":1608079001785,"results":"29","hashOfConfig":"20"},{"size":1334,"mtime":1608075197496,"results":"30","hashOfConfig":"20"},{"size":200,"mtime":1607726849880,"results":"31","hashOfConfig":"20"},{"size":1110,"mtime":1608075197495,"results":"32","hashOfConfig":"20"},{"size":664,"mtime":1607710968736,"results":"33","hashOfConfig":"20"},{"size":66,"mtime":1608080761738,"results":"34","hashOfConfig":"20"},{"size":357,"mtime":1607726849880,"results":"35","hashOfConfig":"20"},{"size":311,"mtime":1607726849881,"results":"36","hashOfConfig":"20"},{"size":386,"mtime":1607726849881,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"3b3y1g",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\index.js",[],["81","82"],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\App.js",["83"],"import React, { useEffect, useState } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./App.css\";\r\nimport TranslateSpeech from \"./TranslateSpeech.js\";\r\nimport cookie from \"react-cookies\";\r\nimport ConvertImage from \"./ConvertImage\";\r\nimport TranslateText from \"./TranslateText\";\r\n// import NoteForm from \"./components/Notes\";\r\nimport AuthStatus from \"./components/AuthStatus\";\r\nimport GetAllNotes from \"./components/GetAllNotes\";\r\nimport PostNotes from \"./components/PostNotes\";\r\nimport DeleteStudent from \"./components/DeleteStudent\";\r\nimport UpdateNotes from \"./components/UpdateNotes\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\nrecognition.interimResults = false;\r\n\r\nfunction App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  const [transcript, handleTranscript] = useState([]);\r\n  const [nativeTranscript, handleNativeTranscript] = useState([]);\r\n  const [languageCodes, handleLanguageCodes] = useState([]);\r\n  const [language, handleLanguage] = useState(\r\n    cookie.load(\"language\") ? cookie.load(\"language\") : \"en\"\r\n  );\r\n  const [inputLanguage, handleInputLanguage] = useState(\r\n    cookie.load(\"inputLanguage\") ? cookie.load(\"inputLanguage\") : \"en\"\r\n  );\r\n  const [inputSelected, handleInputSelected] = useState(false);\r\n  const [question, handleQuestion] = useState(\"\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(false);\r\n  const [translateText, handleTranslateText] = useState(false);\r\n  const [convertImage, handleConvertImage] = useState(false);\r\n  const [home, handleHome] = useState(true);\r\n  const [logIn, handleLogIn] = useState(false);\r\n  const [notes, handleNotes] = useState(false);\r\n  const [firstLanguagePrompt, handleFirstLanguagePrompt] = useState(\r\n    \"What's your language?\"\r\n  );\r\n  const [secondLanguagePrompt, handleSecondLanguagePrompt] = useState(\r\n    \"Instructor's language\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    googleTranslate.getSupportedLanguages(\"en\", (err, languageCodes) => {\r\n      console.log(languageCodes);\r\n      getLanguageCodes(languageCodes);\r\n    });\r\n\r\n    const getLanguageCodes = (languageCodes) => {\r\n      handleLanguageCodes(languageCodes);\r\n    };\r\n  }, []);\r\n\r\n  recognition.onstart = () => {\r\n    console.log(\"voice activated\");\r\n  };\r\n  recognition.onresult = (e) => {\r\n    const current = e.resultIndex;\r\n\r\n    const newTranscript = e.results[current][0].transcript;\r\n    if (!inputSelected) {\r\n      handleTranscript([...transcript, newTranscript]);\r\n    } else handleNativeTranscript([...nativeTranscript, newTranscript]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"What's your language?\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleFirstLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Instructor language\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleSecondLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const changeHandler = (language) => {\r\n    let aquestion = question;\r\n    let cookieLanguage = cookie.load(\"language\");\r\n    let transQuestion = \"\";\r\n\r\n    const translating = (transQuestion) => {\r\n      if (aquestion !== transQuestion) {\r\n        handleQuestion(transQuestion);\r\n        cookie.save(\"question\", transQuestion, { path: \"/\" });\r\n      }\r\n    };\r\n\r\n    if (language !== cookieLanguage) {\r\n      googleTranslate.translate(question, language, (err, translation) => {\r\n        transQuestion = translation.translatedText;\r\n        translating(transQuestion);\r\n      });\r\n    }\r\n\r\n    handleLanguage(language);\r\n    cookie.save(\"language\", language, { path: \"/\" });\r\n  };\r\n\r\n  const changeInputHandler = (language) => {\r\n    handleInputLanguage(language);\r\n    cookie.save(\"inputLanguage\", language, { path: \"/\" });\r\n  };\r\n\r\n  const clearStatus = () => {\r\n    handleHome(false);\r\n    handleTranslateSpeech(false);\r\n    handleTranslateText(false);\r\n    handleConvertImage(false);\r\n    handleLogIn(false);\r\n    handleNotes(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav\r\n        language={language}\r\n        chooseHome={() => {\r\n          clearStatus();\r\n          handleHome(true);\r\n        }}\r\n        chooseTranslateSpeech={() => {\r\n          clearStatus();\r\n\r\n          handleTranslateSpeech(true);\r\n        }}\r\n        chooseTranslateText={() => {\r\n          clearStatus();\r\n          handleTranslateText(true);\r\n        }}\r\n        chooseConvertImage={() => {\r\n          clearStatus();\r\n          handleConvertImage(true);\r\n        }}\r\n        chooseLogin={() => {\r\n          clearStatus();\r\n          handleLogIn(true);\r\n        }}\r\n        chooseNotes={() => {\r\n          clearStatus();\r\n          handleNotes(true);\r\n        }}\r\n      />\r\n      <div className=\"app__question\">\r\n        <br />\r\n        <p>{firstLanguagePrompt}</p>\r\n        <select\r\n          className=\"select__language\"\r\n          value={language}\r\n          onChange={(e) => changeHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"app__question\">\r\n        {secondLanguagePrompt}\r\n        <select\r\n          className=\"select-language\"\r\n          value={inputLanguage}\r\n          onChange={(e) => changeInputHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {logIn ? <AuthStatus /> : \"\"}\r\n      {isAuthenticated ? (\r\n        <div>\r\n          {translateSpeech ? (\r\n            <div>\r\n              <button\r\n                className={`talk`}\r\n                onClick={() => {\r\n                  handleInputSelected(false);\r\n                  recognition.start();\r\n                }}\r\n              >\r\n                Talk\r\n              </button>\r\n              <button\r\n                className={\"talk\"}\r\n                onClick={() => {\r\n                  recognition.stop();\r\n                }}\r\n              >\r\n                Stop\r\n              </button>\r\n              {transcript.map((text) => (\r\n                <p>{text}</p>\r\n              ))}\r\n              <div>\r\n                <div className=\"translated-speech\">\r\n                  <div className=\"speech-list\">\r\n                    {transcript.map((text) => (\r\n                      <TranslateSpeech message={text} language={language} />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"speech-list\">\r\n                    {nativeTranscript.map((text) => (\r\n                      <TranslateSpeech\r\n                        message={text}\r\n                        language={inputLanguage}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {convertImage ? <ConvertImage language={language} /> : \"\"}\r\n          {translateText ? <TranslateText language={language} /> : \"\"}\r\n          {notes ? (\r\n            <div>\r\n              {/* <NoteForm /> */}\r\n              <GetAllNotes language={language} />\r\n              <PostNotes language={language} />\r\n              <DeleteStudent language={language} />\r\n              <UpdateNotes language={language} />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateSpeech.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\ConvertImage.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateText.js",["84"],"import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\n// import { debounce }  from 'lodash';\r\nimport \"./TranslateText.css\";\r\n\r\nfunction TranslateText({ language }) {\r\n  const [greeting, handleGreeting] = useState(\"\");\r\n  const [textMessage, handleTextMessage] = useState(\"\");\r\n  const [placeHolderText, handlePlaceHolderText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let transGreeting;\r\n\r\n    googleTranslate.translate(\r\n      \"Please type out a message to have it translated\",\r\n      language,\r\n      function (err, translation) {\r\n        transGreeting = translation.translatedText;\r\n        translating(transGreeting);\r\n      }\r\n    );\r\n\r\n    const translating = (transGreeting) => {\r\n      handleGreeting(transGreeting);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transPlaceHolderText;\r\n\r\n    googleTranslate.translate(\r\n      \"Type your message here to translate...\",\r\n      language,\r\n      function (err, translation) {\r\n        transPlaceHolderText = translation.translatedText;\r\n        translating(transPlaceHolderText);\r\n      }\r\n    );\r\n\r\n    const translating = (transPlaceHolderText) => {\r\n      handlePlaceHolderText(transPlaceHolderText);\r\n    };\r\n  }, [language]);\r\n\r\n  const translateText = (typedMessage) => {\r\n    let transMessage = \"\";\r\n\r\n    googleTranslate.translate(typedMessage, \"en\", function (err, translation) {\r\n      transMessage = translation.translatedText;\r\n      translating(transMessage);\r\n    });\r\n\r\n    const translating = (transMessage) => {\r\n      handleTextMessage(transMessage);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {greeting}\r\n            <br /><br /> */}\r\n      <div className=\"messages\">\r\n        <div className=\"message\">\r\n          <textarea\r\n            placeHolder={placeHolderText}\r\n            onChange={(e) => translateText(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"message\">{textMessage}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslateText;\r\n","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\Nav.js",["85"],"import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav({\r\n  language,\r\n  chooseHome,\r\n  isLoggedIn,\r\n  chooseLogin,\r\n  chooseTranslateSpeech,\r\n  chooseTranslateText,\r\n  chooseConvertImage,\r\n  chooseNotes,\r\n}) {\r\n  const [home, handleHome] = useState(\"Home\");\r\n  const [login, handleLogIn] = useState(isLoggedIn ? \"Log Out\" : \"Log In\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(\"Translate Speech\");\r\n  const [translateText, handleTranslateText] = useState(\"Translate Text\");\r\n  const [convertImage, handleConvertImage] = useState(\"Convert Image\");\r\n  const [notes, handleNotes] = useState(\"Notes\");\r\n  const [logInClicked, handleLogInClicked] = useState(false);\r\n  const [speechClicked, handleSpeechClicked] = useState(false);\r\n  const [textClicked, handleTextClicked] = useState(false);\r\n  const [convertImageClicked, handleConvertImageClicked] = useState(false);\r\n  const [notesClicked, handleNotesClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Home\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleHome(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Notes\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleNotes(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(login, language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleLogIn(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Speech\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateSpeech(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Text\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateText(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Image\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleConvertImage(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const clearHandles = () => {\r\n    handleLogInClicked(false);\r\n    handleSpeechClicked(false);\r\n    handleTextClicked(false);\r\n    handleConvertImageClicked(false);\r\n    handleNotesClicked(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__list\">\r\n        <li\r\n          className=\"nav__list\"\r\n          onClick={() => {\r\n            chooseHome();\r\n            clearHandles();\r\n          }}\r\n        >\r\n          {home}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${logInClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseLogin();\r\n            clearHandles();\r\n            handleLogInClicked(true);\r\n          }}\r\n        >\r\n          {login}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${speechClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateSpeech();\r\n            clearHandles();\r\n            handleSpeechClicked(true);\r\n          }}\r\n        >\r\n          {translateSpeech}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${textClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateText();\r\n            clearHandles();\r\n            handleTextClicked(true);\r\n          }}\r\n        >\r\n          {translateText}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${convertImageClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseConvertImage();\r\n            clearHandles();\r\n            handleConvertImageClicked(true);\r\n          }}\r\n        >\r\n          {convertImage}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${notesClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseNotes();\r\n            clearHandles();\r\n            handleNotesClicked(true);\r\n          }}\r\n        >\r\n          {notes}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\utils\\googleTranslate.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\UpdateNotes.js",["86"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class UpdateNotes extends React.Component {\r\n  state = {\r\n    student: \"\",\r\n    notes: [],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  handleUpdateOnSubmit = (event) => {\r\n    // Handles the get notes event\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      student: this.state.student,\r\n      notes: this.state.notes,\r\n    };\r\n    axios\r\n      .put(\r\n        `https://special-project202.herokuapp.com/notes/${this.state.student}`,\r\n        {\r\n          notes: this.state.notes,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const studentNotes = res.data;\r\n        //  this.setState({ notes });\r\n        console.log(studentNotes);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleUpdateOnSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"student\"\r\n            placeholder=\"Student name\"\r\n            name=\"student\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"notes\"\r\n            placeholder=\"Update notes\"\r\n            name=\"notes\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Update</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\PostNotes.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\GetAllNotes.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\AuthStatus.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\DeleteStudent.js",["87","88"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DeleteStudent extends React.Component {\r\n  state = {\r\n    student: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  handleDeleteOnSubmit = (event) => {\r\n    // Handles the get notes event\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      student: this.state.student,\r\n    };\r\n    axios\r\n      .delete(\r\n        `https://special-project202.herokuapp.com/notes/${this.state.student}`\r\n      )\r\n      .then((res) => {\r\n        const studentNotes = res.data;\r\n        //  this.setState({ notes });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleDeleteOnSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"student\"\r\n            placeholder=\"Your name\"\r\n            name=\"student\"\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <button type=\"submit\">Delete Student Notes</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\TranslateImage.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\utils\\env.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\Authentication-button.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\LoginButton.js",[],"C:\\Users\\Matt\\Desktop\\reactPrac\\project202\\src\\components\\LogoutButton.js",[],["89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":39,"column":10,"nodeType":"97","messageId":"98","endLine":39,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":61,"column":6,"nodeType":"102","endLine":61,"endColumn":16,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"104","line":18,"column":11,"nodeType":"97","messageId":"98","endLine":18,"endColumn":15},{"ruleId":"95","severity":1,"message":"104","line":17,"column":11,"nodeType":"97","messageId":"98","endLine":17,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":25,"column":15,"nodeType":"97","messageId":"98","endLine":25,"endColumn":27},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'home' is assigned a value but never used.","Identifier","unusedVar","'greeting' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'user' is assigned a value but never used.","'studentNotes' is assigned a value but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [language, login]",{"range":"113","text":"114"},[1975,1985],"[language, login]"]