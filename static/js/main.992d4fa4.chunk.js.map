{"version":3,"sources":["utils/googleTranslate.js","utils/env.js","TranslateSpeech.js","TranslateImage.js","ConvertImage.js","TranslateText.js","components/LoginButton.js","components/LogoutButton.js","components/Authentication-button.js","components/AuthStatus.js","components/GetAllNotes.js","components/PostNotes.js","components/DeleteStudent.js","components/UpdateNotes.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["googleTranslate","require","TranslateSpeech","message","language","useState","translatedMessage","handleTranslatedMessage","useEffect","transMessage","translate","err","translation","translatedText","translating","newMessage","nationality","window","responsiveVoice","speak","TranslateImage","text","translatedImage","handleTranslatedImage","transState","ConvertImage","uploads","handleUploads","ocr","setOcr","convertImage","handleConvertImage","uploadDocuments","handleUploadDocuments","generate","handleGenerate","generateText","a","worker","load","loadLanguage","initialize","textArray","i","length","recognize","data","push","createWorker","logger","m","console","log","className","type","id","onChange","e","target","files","myUploads","key","hasOwnProperty","upload","URL","createObjectURL","handleChange","multiple","map","value","index","src","width","alt","onClick","TranslateText","handleGreeting","textMessage","handleTextMessage","placeHolderText","handlePlaceHolderText","transGreeting","transPlaceHolderText","placeHolder","typedMessage","translateText","LoginButton","loginWithRedirect","useAuth0","LogoutButton","logout","returnTo","location","origin","AuthenticationButton","isAuthenticated","AuthStatus","GetAllNotes","notes","handleNotes","getAllNotesPrompt","handleGetAllNotesPrompt","event","axios","get","then","res","allNotes","note","Math","random","user","student","PostNotes","studentName","handleStudentName","studentNotePrompt","handleStudentNotePrompt","buttonText","handleButtonText","onSubmit","preventDefault","post","studentNotes","placeholder","name","DeleteStudent","state","setState","handleDeleteOnSubmit","delete","catch","error","this","React","Component","UpdateNotes","handleUpdateOnSubmit","put","Nav","chooseHome","isLoggedIn","chooseLogin","chooseTranslateSpeech","chooseTranslateText","chooseConvertImage","chooseNotes","home","handleHome","login","handleLogIn","translateSpeech","handleTranslateSpeech","handleTranslateText","logInClicked","handleLogInClicked","speechClicked","handleSpeechClicked","textClicked","handleTextClicked","convertImageClicked","handleConvertImageClicked","notesClicked","handleNotesClicked","clearHandles","recognition","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","App","transcript","handleTranscript","nativeTranscript","handleNativeTranscript","languageCodes","handleLanguageCodes","cookie","handleLanguage","inputLanguage","handleInputLanguage","inputSelected","handleInputSelected","question","handleQuestion","logIn","firstLanguagePrompt","handleFirstLanguagePrompt","secondLanguagePrompt","handleSecondLanguagePrompt","getSupportedLanguages","getLanguageCodes","onstart","onresult","current","resultIndex","newTranscript","results","changeHandler","aquestion","cookieLanguage","transQuestion","save","path","clearStatus","lang","changeInputHandler","start","stop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.992d4fa4.chunk.js","sourcesContent":["import {\n    apiKey\n} from \"./env\";\n\nexport const googleTranslate = require(\"google-translate\")(apiKey, {});","export const apiKey = \"AIzaSyBMSXXsGey5rOsb3C4_FeWogNJ9kF9WCgA\";\r\n","import React, { useState, useEffect } from \"react\";\nimport { googleTranslate } from \"./utils/googleTranslate\";\n\nfunction TranslateSpeech({ message, language }) {\n  const [translatedMessage, handleTranslatedMessage] = useState(\"\");\n\n  useEffect(() => {\n    let transMessage = \"\";\n\n    if (language) {\n      googleTranslate.translate(message, language, (err, translation) => {\n        transMessage = translation.translatedText;\n        translating(transMessage);\n      });\n    }\n\n    const translating = (transMessage) => {\n      handleTranslatedMessage(transMessage);\n    };\n  }, [message, language]);\n\n  useEffect(() => {\n    let newMessage;\n    let nationality;\n\n    if (newMessage !== translatedMessage) {\n      newMessage = translatedMessage;\n      if (language === \"en\") {\n        nationality = \"US English\";\n      }\n      if (language === \"es\") {\n        nationality = \"Spanish Latin American\";\n      }\n      if (language === \"fr\") {\n        nationality = \"French\";\n      }\n      if (language === \"de\") {\n        nationality = \"Deutsch\";\n      }\n      if (language === \"it\") {\n        nationality = \"Italian\";\n      }\n      if (language === \"ru\") {\n        nationality = \"Russian\";\n      }\n      if (language === \"nl\") {\n        nationality = \"Dutch\";\n      }\n      if (language === \"ko\") {\n        nationality = \"Korean\";\n      }\n      if (language === \"zh-TW\" || language === \"zh-CN\") {\n        nationality = \"Chinese\";\n      }\n      if (language === \"hi\") {\n        nationality = \"Hindi\";\n      }\n      if (language === \"id\") {\n        nationality = \"Indonesian\";\n      }\n      if (language === \"pl\") {\n        nationality = \"Polish\";\n      }\n      if (language === \"pt\") {\n        nationality = \"Portuguese\";\n      }\n\n      window.responsiveVoice.speak(newMessage, `${nationality} Female`);\n    }\n  }, [translatedMessage, language]);\n  return (\n    <div>\n      {message}\n      <br />\n      {translatedMessage}\n      <br />\n      <br />\n    </div>\n  );\n}\n\nexport default TranslateSpeech;\n","import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\n\r\nfunction TranslateImage({ text, language }) {\r\n  const [translatedImage, handleTranslatedImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(text, language, (err, translation) => {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslatedImage(transState);\r\n    };\r\n  }, [language, text]);\r\n  return (\r\n    <div>\r\n      <li>{translatedImage}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslateImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport TranslateImage from \"./TranslateImage\";\r\n\r\nfunction ConvertImage({ language }) {\r\n  const [uploads, handleUploads] = useState([]);\r\n  const [ocr, setOcr] = useState([]);\r\n  const [convertImage, handleConvertImage] = useState(\"Convert Image\");\r\n  const [uploadDocuments, handleUploadDocuments] = useState(\r\n    \"Click here to upload documents\"\r\n  );\r\n  const [generate, handleGenerate] = useState(\"Generate\");\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Convert Image\", language, (err, translation) => {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleConvertImage(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Click here to upload documents\",\r\n      language,\r\n      (err, translation) => {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleUploadDocuments(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Generate\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleGenerate(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      let myUploads = [];\r\n      for (let key in e.target.files) {\r\n        if (!e.target.files.hasOwnProperty(key)) continue;\r\n        let upload = e.target.files[key];\r\n        myUploads.push(URL.createObjectURL(upload));\r\n      }\r\n      handleUploads([...uploads, myUploads]);\r\n    }\r\n  };\r\n\r\n  const generateText = async () => {\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng\");\r\n    await worker.initialize(\"eng\");\r\n    let textArray = [];\r\n    for (let i = 0; i < uploads.length; i++) {\r\n      const {\r\n        data: { text },\r\n      } = await worker.recognize(uploads[i][0]);\r\n      textArray.push(text);\r\n    }\r\n    setOcr(textArray);\r\n  };\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => console.log(m),\r\n  });\r\n  return (\r\n    <div className=\"convertImage\">\r\n      <header className=\"header\">\r\n        <h1>{convertImage}</h1>\r\n      </header>\r\n\r\n      <section className=\"hero\">\r\n        <label className=\"fileUploaderContainer\">\r\n          {uploadDocuments}\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileUploader\"\r\n            onChange={(e) => handleChange(e)}\r\n            multiple\r\n          />\r\n        </label>\r\n\r\n        <div>\r\n          {uploads.map((value, index) => {\r\n            return (\r\n              <img\r\n                key={index}\r\n                src={value}\r\n                width=\"200px\"\r\n                alt={`${index} to be converted`}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <button className=\"button\" onClick={() => generateText()}>\r\n          {generate}\r\n        </button>\r\n      </section>\r\n\r\n      <ul>\r\n        {ocr.map((text, index) => (\r\n          <TranslateImage text={text} index={index} language={language} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConvertImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\n// import { debounce }  from 'lodash';\r\nimport \"./TranslateText.css\";\r\n\r\nfunction TranslateText({ language }) {\r\n  const [greeting, handleGreeting] = useState(\"\");\r\n  const [textMessage, handleTextMessage] = useState(\"\");\r\n  const [placeHolderText, handlePlaceHolderText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let transGreeting;\r\n\r\n    googleTranslate.translate(\r\n      \"Please type out a message to have it translated\",\r\n      language,\r\n      function (err, translation) {\r\n        transGreeting = translation.translatedText;\r\n        translating(transGreeting);\r\n      }\r\n    );\r\n\r\n    const translating = (transGreeting) => {\r\n      handleGreeting(transGreeting);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transPlaceHolderText;\r\n\r\n    googleTranslate.translate(\r\n      \"Type your message here to translate...\",\r\n      language,\r\n      function (err, translation) {\r\n        transPlaceHolderText = translation.translatedText;\r\n        translating(transPlaceHolderText);\r\n      }\r\n    );\r\n\r\n    const translating = (transPlaceHolderText) => {\r\n      handlePlaceHolderText(transPlaceHolderText);\r\n    };\r\n  }, [language]);\r\n\r\n  const translateText = (typedMessage) => {\r\n    let transMessage = \"\";\r\n\r\n    googleTranslate.translate(typedMessage, \"en\", function (err, translation) {\r\n      transMessage = translation.translatedText;\r\n      translating(transMessage);\r\n    });\r\n\r\n    const translating = (transMessage) => {\r\n      handleTextMessage(transMessage);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {greeting}\r\n            <br /><br /> */}\r\n      <div className=\"messages\">\r\n        <div className=\"message\">\r\n          <textarea\r\n            placeHolder={placeHolderText}\r\n            onChange={(e) => translateText(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"message\">{textMessage}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslateText;\r\n","import React from \"react\";\r\nimport {\r\n    useAuth0\r\n} from \"@auth0/auth0-react\";\r\n\r\n\r\nconst LoginButton = () => {\r\n    const {\r\n        loginWithRedirect\r\n    } = useAuth0();\r\n\r\n    return <button onClick = {\r\n        () => loginWithRedirect()\r\n    } > Log In </button>;\r\n}\r\n\r\n\r\n;\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport {\r\n    useAuth0\r\n} from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n    const { logout } = useAuth0();\r\n    return (\r\n      <button\r\n        onClick={() =>\r\n          logout({\r\n            returnTo: window.location.origin,\r\n          })\r\n        }\r\n      >\r\n        Log Out\r\n      </button>\r\n    );\r\n  };\r\n  \r\n  export default LogoutButton;","import React from \"react\";\r\n\r\nimport LoginButton from \"./LoginButton\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n};\r\n\r\nexport default AuthenticationButton;","import React from \"react\";\r\nimport AuthenticationButton from \"./Authentication-button\";\r\n\r\nconst AuthStatus = () => (\r\n  <div>\r\n    <AuthenticationButton />\r\n  </div>\r\n);\r\n\r\nexport default AuthStatus;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./GetAllNotes.css\";\r\nimport { googleTranslate } from \"../utils/googleTranslate\";\r\n\r\nexport default function GetAllNotes({ language }) {\r\n  const [notes, handleNotes] = useState([]);\r\n  const [getAllNotesPrompt, handleGetAllNotesPrompt] = useState(\r\n    \"Get All Notes\"\r\n  );\r\n\r\n  const handleGetAllNotes = (event) => {\r\n    // Handles the get notes event\r\n    axios.get(\"https://special-project202.herokuapp.com/notes\").then((res) => {\r\n      const allNotes = res.data;\r\n      handleNotes(allNotes);\r\n      console.log(allNotes);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Get All Notes\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleGetAllNotesPrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGetAllNotes}>{getAllNotesPrompt}</button>\r\n      {notes.map((note) => (\r\n        <div className={Math.random() < 0.5 ? \"noteStyle1\" : \"noteStyle2\"}>\r\n          <h3>{note.user.student}</h3>\r\n          <p>{note.user.notes}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { googleTranslate } from \"../utils/googleTranslate\";\r\n\r\n//changed class name from GetAllNotes to PostNotes. Worked initially.\r\nexport default function PostNotes({ language }) {\r\n  const [student, handleStudent] = useState(\"\");\r\n  const [notes, handleNotes] = useState([]);\r\n  const [studentName, handleStudentName] = useState(\"Your name\");\r\n  const [studentNotePrompt, handleStudentNotePrompt] = useState(\"Add note\");\r\n  const [buttonText, handleButtonText] = useState(\"Add\");\r\n\r\n  const handleAddNotesSubmit = (event) => {\r\n    // Handles the get notes event\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      student,\r\n      notes,\r\n    };\r\n    axios\r\n      .post(\"https://special-project202.herokuapp.com/notes\", { user })\r\n      .then((res) => {\r\n        const studentNotes = res.data;\r\n        //  setState({ notes });\r\n        console.log(studentNotes);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Your name\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleStudentName(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Add note\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleStudentNotePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Add\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleButtonText(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleAddNotesSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"student\"\r\n          placeholder={studentName}\r\n          name=\"student\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          id=\"notes\"\r\n          placeholder={studentNotePrompt}\r\n          name=\"notes\"\r\n        />\r\n        <button type=\"submit\">{buttonText}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DeleteStudent extends React.Component {\r\n  state = {\r\n    student: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  handleDeleteOnSubmit = (event) => {\r\n    // Handles the get notes event\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      student: this.state.student,\r\n    };\r\n    axios\r\n      .delete(\r\n        `https://special-project202.herokuapp.com/notes/${this.state.student}`\r\n      )\r\n      .then((res) => {\r\n        const studentNotes = res.data;\r\n        //  this.setState({ notes });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleDeleteOnSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"student\"\r\n            placeholder=\"Your name\"\r\n            name=\"student\"\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <button type=\"submit\">Delete Student Notes</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class UpdateNotes extends React.Component {\r\n  state = {\r\n    student: \"\",\r\n    notes: [],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  handleUpdateOnSubmit = (event) => {\r\n    // Handles the get notes event\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      student: this.state.student,\r\n      notes: this.state.notes,\r\n    };\r\n    axios\r\n      .put(\r\n        `https://special-project202.herokuapp.com/notes/${this.state.student}`,\r\n        {\r\n          notes: this.state.notes,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const studentNotes = res.data;\r\n        //  this.setState({ notes });\r\n        console.log(studentNotes);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleUpdateOnSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"student\"\r\n            placeholder=\"Student name\"\r\n            name=\"student\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"notes\"\r\n            placeholder=\"Update notes\"\r\n            name=\"notes\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Update</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav({\r\n  language,\r\n  chooseHome,\r\n  isLoggedIn,\r\n  chooseLogin,\r\n  chooseTranslateSpeech,\r\n  chooseTranslateText,\r\n  chooseConvertImage,\r\n  chooseNotes,\r\n}) {\r\n  const [home, handleHome] = useState(\"Home\");\r\n  const [login, handleLogIn] = useState(isLoggedIn ? \"Log Out\" : \"Log In\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(\"Translate Speech\");\r\n  const [translateText, handleTranslateText] = useState(\"Translate Text\");\r\n  const [convertImage, handleConvertImage] = useState(\"Convert Image\");\r\n  const [notes, handleNotes] = useState(\"Notes\");\r\n  const [logInClicked, handleLogInClicked] = useState(false);\r\n  const [speechClicked, handleSpeechClicked] = useState(false);\r\n  const [textClicked, handleTextClicked] = useState(false);\r\n  const [convertImageClicked, handleConvertImageClicked] = useState(false);\r\n  const [notesClicked, handleNotesClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Home\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleHome(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Notes\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleNotes(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(login, language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleLogIn(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Speech\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateSpeech(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Text\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleTranslateText(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\"Image\", language, function (err, translation) {\r\n      transState = translation.translatedText;\r\n      translating(transState);\r\n    });\r\n\r\n    const translating = (transState) => {\r\n      handleConvertImage(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const clearHandles = () => {\r\n    handleLogInClicked(false);\r\n    handleSpeechClicked(false);\r\n    handleTextClicked(false);\r\n    handleConvertImageClicked(false);\r\n    handleNotesClicked(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__list\">\r\n        <li\r\n          className=\"nav__list\"\r\n          onClick={() => {\r\n            chooseHome();\r\n            clearHandles();\r\n          }}\r\n        >\r\n          {home}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${logInClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseLogin();\r\n            clearHandles();\r\n            handleLogInClicked(true);\r\n          }}\r\n        >\r\n          {login}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${speechClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateSpeech();\r\n            clearHandles();\r\n            handleSpeechClicked(true);\r\n          }}\r\n        >\r\n          {translateSpeech}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${textClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseTranslateText();\r\n            clearHandles();\r\n            handleTextClicked(true);\r\n          }}\r\n        >\r\n          {translateText}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${convertImageClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseConvertImage();\r\n            clearHandles();\r\n            handleConvertImageClicked(true);\r\n          }}\r\n        >\r\n          {convertImage}\r\n        </li>\r\n        <li\r\n          className={`nav__list ${notesClicked && \"clicked\"}`}\r\n          onClick={() => {\r\n            chooseNotes();\r\n            clearHandles();\r\n            handleNotesClicked(true);\r\n          }}\r\n        >\r\n          {notes}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { googleTranslate } from \"./utils/googleTranslate\";\r\nimport \"./App.css\";\r\nimport TranslateSpeech from \"./TranslateSpeech.js\";\r\nimport cookie from \"react-cookies\";\r\nimport ConvertImage from \"./ConvertImage\";\r\nimport TranslateText from \"./TranslateText\";\r\n// import NoteForm from \"./components/Notes\";\r\nimport AuthStatus from \"./components/AuthStatus\";\r\nimport GetAllNotes from \"./components/GetAllNotes\";\r\nimport PostNotes from \"./components/PostNotes\";\r\nimport DeleteStudent from \"./components/DeleteStudent\";\r\nimport UpdateNotes from \"./components/UpdateNotes\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\nrecognition.interimResults = false;\r\n\r\nfunction App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  const [transcript, handleTranscript] = useState([]);\r\n  const [nativeTranscript, handleNativeTranscript] = useState([]);\r\n  const [languageCodes, handleLanguageCodes] = useState([]);\r\n  const [language, handleLanguage] = useState(\r\n    cookie.load(\"language\") ? cookie.load(\"language\") : \"en\"\r\n  );\r\n  const [inputLanguage, handleInputLanguage] = useState(\r\n    cookie.load(\"inputLanguage\") ? cookie.load(\"inputLanguage\") : \"en\"\r\n  );\r\n  const [inputSelected, handleInputSelected] = useState(false);\r\n  const [question, handleQuestion] = useState(\"\");\r\n  const [translateSpeech, handleTranslateSpeech] = useState(false);\r\n  const [translateText, handleTranslateText] = useState(false);\r\n  const [convertImage, handleConvertImage] = useState(false);\r\n  const [home, handleHome] = useState(true);\r\n  const [logIn, handleLogIn] = useState(false);\r\n  const [notes, handleNotes] = useState(false);\r\n  const [firstLanguagePrompt, handleFirstLanguagePrompt] = useState(\r\n    \"What's your language?\"\r\n  );\r\n  const [secondLanguagePrompt, handleSecondLanguagePrompt] = useState(\r\n    \"Instructor's language\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    googleTranslate.getSupportedLanguages(\"en\", (err, languageCodes) => {\r\n      console.log(languageCodes);\r\n      getLanguageCodes(languageCodes);\r\n    });\r\n\r\n    const getLanguageCodes = (languageCodes) => {\r\n      handleLanguageCodes(languageCodes);\r\n    };\r\n  }, []);\r\n\r\n  recognition.onstart = () => {\r\n    console.log(\"voice activated\");\r\n  };\r\n  recognition.onresult = (e) => {\r\n    const current = e.resultIndex;\r\n\r\n    const newTranscript = e.results[current][0].transcript;\r\n    if (!inputSelected) {\r\n      handleTranscript([...transcript, newTranscript]);\r\n    } else handleNativeTranscript([...nativeTranscript, newTranscript]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"What's your language?\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleFirstLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    let transState;\r\n    googleTranslate.translate(\r\n      \"Instructor language\",\r\n      language,\r\n      function (err, translation) {\r\n        transState = translation.translatedText;\r\n        translating(transState);\r\n      }\r\n    );\r\n\r\n    const translating = (transState) => {\r\n      handleSecondLanguagePrompt(transState);\r\n    };\r\n  }, [language]);\r\n\r\n  const changeHandler = (language) => {\r\n    let aquestion = question;\r\n    let cookieLanguage = cookie.load(\"language\");\r\n    let transQuestion = \"\";\r\n\r\n    const translating = (transQuestion) => {\r\n      if (aquestion !== transQuestion) {\r\n        handleQuestion(transQuestion);\r\n        cookie.save(\"question\", transQuestion, { path: \"/\" });\r\n      }\r\n    };\r\n\r\n    if (language !== cookieLanguage) {\r\n      googleTranslate.translate(question, language, (err, translation) => {\r\n        transQuestion = translation.translatedText;\r\n        translating(transQuestion);\r\n      });\r\n    }\r\n\r\n    handleLanguage(language);\r\n    cookie.save(\"language\", language, { path: \"/\" });\r\n  };\r\n\r\n  const changeInputHandler = (language) => {\r\n    handleInputLanguage(language);\r\n    cookie.save(\"inputLanguage\", language, { path: \"/\" });\r\n  };\r\n\r\n  const clearStatus = () => {\r\n    handleHome(false);\r\n    handleTranslateSpeech(false);\r\n    handleTranslateText(false);\r\n    handleConvertImage(false);\r\n    handleLogIn(false);\r\n    handleNotes(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav\r\n        language={language}\r\n        chooseHome={() => {\r\n          clearStatus();\r\n          handleHome(true);\r\n        }}\r\n        chooseTranslateSpeech={() => {\r\n          clearStatus();\r\n\r\n          handleTranslateSpeech(true);\r\n        }}\r\n        chooseTranslateText={() => {\r\n          clearStatus();\r\n          handleTranslateText(true);\r\n        }}\r\n        chooseConvertImage={() => {\r\n          clearStatus();\r\n          handleConvertImage(true);\r\n        }}\r\n        chooseLogin={() => {\r\n          clearStatus();\r\n          handleLogIn(true);\r\n        }}\r\n        chooseNotes={() => {\r\n          clearStatus();\r\n          handleNotes(true);\r\n        }}\r\n      />\r\n      <div className=\"app__question\">\r\n        <br />\r\n        <p>{firstLanguagePrompt}</p>\r\n        <select\r\n          className=\"select__language\"\r\n          value={language}\r\n          onChange={(e) => changeHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"app__question\">\r\n        {secondLanguagePrompt}\r\n        <select\r\n          className=\"select-language\"\r\n          value={inputLanguage}\r\n          onChange={(e) => changeInputHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {logIn ? <AuthStatus /> : \"\"}\r\n      {isAuthenticated ? (\r\n        <div>\r\n          {translateSpeech ? (\r\n            <div>\r\n              <button\r\n                className={`talk`}\r\n                onClick={() => {\r\n                  handleInputSelected(false);\r\n                  recognition.start();\r\n                }}\r\n              >\r\n                Talk\r\n              </button>\r\n              <button\r\n                className={\"talk\"}\r\n                onClick={() => {\r\n                  recognition.stop();\r\n                }}\r\n              >\r\n                Stop\r\n              </button>\r\n              {transcript.map((text) => (\r\n                <p>{text}</p>\r\n              ))}\r\n              <div>\r\n                <div className=\"translated-speech\">\r\n                  <div className=\"speech-list\">\r\n                    {transcript.map((text) => (\r\n                      <TranslateSpeech message={text} language={language} />\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"speech-list\">\r\n                    {nativeTranscript.map((text) => (\r\n                      <TranslateSpeech\r\n                        message={text}\r\n                        language={inputLanguage}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {convertImage ? <ConvertImage language={language} /> : \"\"}\r\n          {translateText ? <TranslateText language={language} /> : \"\"}\r\n          {notes ? (\r\n            <div>\r\n              {/* <NoteForm /> */}\r\n              <GetAllNotes language={language} />\r\n              <PostNotes language={language} />\r\n              <DeleteStudent language={language} />\r\n              <UpdateNotes language={language} />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {\n  Auth0Provider\n} from \"@auth0/auth0-react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientID = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render( \n<React.StrictMode >\n<Auth0Provider\n    domain={domain}\n    clientId={clientID}\n    redirectUri={window.location.origin}\n  >\n  <App / >\n  </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}